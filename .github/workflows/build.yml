name: Build a KMM Project

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  XCODE_PROJECT_PATH: ${{ github.workspace }}/iosApp/iosApp.xcodeproj
  FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 1800
  FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 10

jobs:
  build_android:
    runs-on: macos-13

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 14.3.1

      - name: Install gems
        run: bundle install

      - name: Install XCode tools
        run: |
          brew install xcbeautify
          brew install xcproj

      - uses: yukiarrr/ios-build-action@v1.11.0
        with:
          project-path: ${{ env.XCODE_PROJECT_PATH }}
          p12-base64: ${{ secrets.P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
          team-id: ${{ secrets.TEAM_ID }}
          #          workspace-path: $GITHUB_WORKSPACE/iosApp/iosApp.xcworkspace # optional
          export-method: ad-hoc
          configuration: Debug
#          scheme: iosApp-Debug

#      - name: Install Bundler
#        run: gem install bundler
#
#      - name: Cache Gradle
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Setup Java
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: '17'
#          cache: 'gradle'
#
#      - name: Setup Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: 3.1.2
#          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
#
##      - name: Build the project
##        run: bundle exec fastlane build
#
#      - name: Setup environment
#        run: |
#          echo -n "${{ secrets.KEYSTORE_PROPERTIES }}" | base64 --decode >> androidApp/keystore.properties
#          openssl enc -aes-256-cbc -pass pass:${{ secrets.KEYSTORE_DECRYPTION_KEY }} -d -in androidApp/keystore.enc -out androidApp/keystore
#
#      - name: Build the Android app
#        run: bundle exec fastlane assembleDebug
#
#      - name: Builds the Android release APK
#        run: bundle exec fastlane assembleRelease
#
#      - name: Upload to AWS S3
#        run: |
#          aws s3 cp androidApp/build/outputs/apk/release/androidApp-release.apk ${{secrets.AWS_S3_BUCKET_DIRECTORY}}
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
#
#      - name: Run unit tests
#        run: bundle exec fastlane test